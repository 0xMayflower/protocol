/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { SquareRootVoteCounter } from "../SquareRootVoteCounter";

export class SquareRootVoteCounter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _visionFarm: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SquareRootVoteCounter> {
    return super.deploy(
      _visionFarm,
      overrides || {}
    ) as Promise<SquareRootVoteCounter>;
  }
  getDeployTransaction(
    _visionFarm: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_visionFarm, overrides || {});
  }
  attach(address: string): SquareRootVoteCounter {
    return super.attach(address) as SquareRootVoteCounter;
  }
  connect(signer: Signer): SquareRootVoteCounter__factory {
    return super.connect(signer) as SquareRootVoteCounter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SquareRootVoteCounter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SquareRootVoteCounter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_visionFarm",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "visionFarm",
    outputs: [
      {
        internalType: "contract IVisionFarm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516103ad3803806103ad8339818101604052602081101561003357600080fd5b81019080805190602001909291905050508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505060805160601c61030c6100a16000398060c9528060f05280610195525061030c6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634edc9bf91461003b5780639ab24eb01461006f575b600080fd5b6100436100c7565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100b16004803603602081101561008557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100eb565b6040518082815260200191505060405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b97dd9e26040518163ffffffff1660e01b815260040160206040518083038186803b15801561015457600080fd5b505afa158015610168573d6000803e3d6000fd5b505050506040513d602081101561017e57600080fd5b8101908080519060200190929190505050905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638e3d1b6685600185016040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b15801561022557600080fd5b505afa158015610239573d6000803e3d6000fd5b505050506040513d602081101561024f57600080fd5b8101908080519060200190929190505050905061026b81610274565b92505050919050565b600060038211156102c357819050600060016002848161029057fe5b040190505b818110156102bd578091506002818285816102ac57fe5b0401816102b557fe5b049050610295565b506102d1565b600082146102d057600190505b5b91905056fea2646970667358221220b08beedaa7046eb33bdccbc525181b6a206969a986b9af7794ccbedeaaff497c64736f6c63430007060033";
