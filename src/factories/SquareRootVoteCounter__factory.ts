/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { SquareRootVoteCounter } from "../SquareRootVoteCounter";

export class SquareRootVoteCounter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SquareRootVoteCounter> {
    return super.deploy(overrides || {}) as Promise<SquareRootVoteCounter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SquareRootVoteCounter {
    return super.attach(address) as SquareRootVoteCounter;
  }
  connect(signer: Signer): SquareRootVoteCounter__factory {
    return super.connect(signer) as SquareRootVoteCounter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SquareRootVoteCounter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SquareRootVoteCounter;
  }
}

const _abi = [
  {
    inputs: [],
    name: "getTotalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "veLockId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_veToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "veLockId",
        type: "uint256",
      },
    ],
    name: "voterOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "votingRights",
    outputs: [
      {
        internalType: "uint256[]",
        name: "rights",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610779806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80639a0e7d66116100505780639a0e7d66146100da578063a8fef100146100e2578063c4d66de81461015857610067565b80631fb05fca1461006c57806391f36633146100a5575b600080fd5b6100896004803603602081101561008257600080fd5b5035610180565b604080516001600160a01b039092168252519081900360200190f35b6100c8600480360360408110156100bb57600080fd5b508035906020013561020e565b60408051918252519081900360200190f35b6100c861022e565b610108600480360360208110156100f857600080fd5b50356001600160a01b03166102b7565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561014457818101518382015260200161012c565b505050509050019250505060405180910390f35b61017e6004803603602081101561016e57600080fd5b50356001600160a01b0316610462565b005b60008060029054906101000a90046001600160a01b03166001600160a01b0316634864025e836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156101da57600080fd5b505afa1580156101ee573d6000803e3d6000fd5b505050506040513d602081101561020457600080fd5b505190505b919050565b60008061021b848461060e565b9050610226816106ad565b949350505050565b60006102b2600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561028157600080fd5b505afa158015610295573d6000803e3d6000fd5b505050506040513d60208110156102ab57600080fd5b50516106ad565b905090565b606060008060029054906101000a90046001600160a01b03166001600160a01b0316634bb5c414846040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561031c57600080fd5b505afa158015610330573d6000803e3d6000fd5b505050506040513d602081101561034657600080fd5b505190508067ffffffffffffffff8111801561036157600080fd5b5060405190808252806020026020018201604052801561038b578160200160208202803683370190505b50915060005b825181101561045b57600054604080517f5fb6073a0000000000000000000000000000000000000000000000000000000081526001600160a01b0387811660048301526024820185905291516201000090930490911691635fb6073a91604480820192602092909190829003018186803b15801561040e57600080fd5b505afa158015610422573d6000803e3d6000fd5b505050506040513d602081101561043857600080fd5b5051835184908390811061044857fe5b6020908102919091010152600101610391565b5050919050565b600054610100900460ff168061047b575061047b6106fe565b80610489575060005460ff16155b6104de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610716602e913960400191505060405180910390fd5b600054610100900460ff16158015610509576000805460ff1961ff0019909116610100171660011790555b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038416908117909155604080517f14f57a4b00000000000000000000000000000000000000000000000000000000815290516314f57a4b91600480820192602092909190829003018186803b15801561058e57600080fd5b505afa1580156105a2573d6000803e3d6000fd5b505050506040513d60208110156105b857600080fd5b5051600080546001600160a01b0390921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055801561060a576000805461ff00191690555b5050565b600154604080517f642cf649000000000000000000000000000000000000000000000000000000008152600481018590526024810184905290516000926001600160a01b03169163642cf649916044808301926020929190829003018186803b15801561067a57600080fd5b505afa15801561068e573d6000803e3d6000fd5b505050506040513d60208110156106a457600080fd5b50519392505050565b600060038211156106f0575080600160028204015b818110156106ea578091506002818285816106d957fe5b0401816106e257fe5b0490506106c2565b50610209565b811561020957506001919050565b60006107093061070f565b15905090565b3b15159056fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a26469706673582212209b58b19e405a9704379e004fddb9f7a9f76c75861d2a427628026a11d4a02a0264736f6c63430007060033";
