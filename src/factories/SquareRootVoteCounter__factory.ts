/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { SquareRootVoteCounter } from "../SquareRootVoteCounter";

export class SquareRootVoteCounter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _veToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SquareRootVoteCounter> {
    return super.deploy(
      _veToken,
      overrides || {}
    ) as Promise<SquareRootVoteCounter>;
  }
  getDeployTransaction(
    _veToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_veToken, overrides || {});
  }
  attach(address: string): SquareRootVoteCounter {
    return super.attach(address) as SquareRootVoteCounter;
  }
  connect(signer: Signer): SquareRootVoteCounter__factory {
    return super.connect(signer) as SquareRootVoteCounter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SquareRootVoteCounter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SquareRootVoteCounter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_veToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getTotalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "veLockId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "veLockId",
        type: "uint256",
      },
    ],
    name: "voterOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "votingRights",
    outputs: [
      {
        internalType: "uint256[]",
        name: "rights",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161063a38038061063a8339818101604052602081101561003357600080fd5b5051600180546001600160a01b0319166001600160a01b038316908117909155604080516314f57a4b60e01b815290518392916314f57a4b916004808301926020929190829003018186803b15801561008b57600080fd5b505afa15801561009f573d6000803e3d6000fd5b505050506040513d60208110156100b557600080fd5b5051600080546001600160a01b039092166001600160a01b03199092169190911790555050610551806100e96000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631fb05fca1461005157806391f366331461008a5780639a0e7d66146100bf578063a8fef100146100c7575b600080fd5b61006e6004803603602081101561006757600080fd5b503561013d565b604080516001600160a01b039092168252519081900360200190f35b6100ad600480360360408110156100a057600080fd5b50803590602001356101d7565b60408051918252519081900360200190f35b6100ad6101f7565b6100ed600480360360208110156100dd57600080fd5b50356001600160a01b0316610280565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610129578181015183820152602001610111565b505050509050019250505060405180910390f35b60008054604080517f4864025e0000000000000000000000000000000000000000000000000000000081526004810185905290516001600160a01b0390921691634864025e91602480820192602092909190829003018186803b1580156101a357600080fd5b505afa1580156101b7573d6000803e3d6000fd5b505050506040513d60208110156101cd57600080fd5b505190505b919050565b6000806101e4848461042b565b90506101ef816104ca565b949350505050565b600061027b600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561024a57600080fd5b505afa15801561025e573d6000803e3d6000fd5b505050506040513d602081101561027457600080fd5b50516104ca565b905090565b60008054604080517f4bb5c4140000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301529151606094939290921691634bb5c41491602480820192602092909190829003018186803b1580156102ec57600080fd5b505afa158015610300573d6000803e3d6000fd5b505050506040513d602081101561031657600080fd5b505190508067ffffffffffffffff8111801561033157600080fd5b5060405190808252806020026020018201604052801561035b578160200160208202803683370190505b50915060005b825181101561042457600054604080517f5fb6073a0000000000000000000000000000000000000000000000000000000081526001600160a01b0387811660048301526024820185905291519190921691635fb6073a916044808301926020929190829003018186803b1580156103d757600080fd5b505afa1580156103eb573d6000803e3d6000fd5b505050506040513d602081101561040157600080fd5b5051835184908390811061041157fe5b6020908102919091010152600101610361565b5050919050565b600154604080517f642cf649000000000000000000000000000000000000000000000000000000008152600481018590526024810184905290516000926001600160a01b03169163642cf649916044808301926020929190829003018186803b15801561049757600080fd5b505afa1580156104ab573d6000803e3d6000fd5b505050506040513d60208110156104c157600080fd5b50519392505050565b6000600382111561050d575080600160028204015b81811015610507578091506002818285816104f657fe5b0401816104ff57fe5b0490506104df565b506101d2565b81156101d25750600191905056fea264697066735822122072cb30dc18a3d60b5f2fc71f16120e2cd4fe1108aae77a1418907beb72d6cf2264736f6c63430007060033";
