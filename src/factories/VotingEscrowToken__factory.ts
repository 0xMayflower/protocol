/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { VotingEscrowToken } from "../VotingEscrowToken";

export class VotingEscrowToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VotingEscrowToken> {
    return super.deploy(
      _name,
      _symbol,
      overrides || {}
    ) as Promise<VotingEscrowToken>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): VotingEscrowToken {
    return super.attach(address) as VotingEscrowToken;
  }
  connect(signer: Signer): VotingEscrowToken__factory {
    return super.connect(signer) as VotingEscrowToken__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VotingEscrowToken {
    return new Contract(address, _abi, signerOrProvider) as VotingEscrowToken;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "balanceOfLockAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNum",
        type: "uint256",
      },
    ],
    name: "balanceOfLockAtBlockNum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
        ],
        internalType: "struct Lock",
        name: "prevLock",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
        ],
        internalType: "struct Lock",
        name: "newLock",
        type: "tuple",
      },
    ],
    name: "checkpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getLastLockPoint",
    outputs: [
      {
        components: [
          {
            internalType: "int128",
            name: "bias",
            type: "int128",
          },
          {
            internalType: "int128",
            name: "slope",
            type: "int128",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNum",
            type: "uint256",
          },
        ],
        internalType: "struct Point",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getLockPointHistory",
    outputs: [
      {
        components: [
          {
            internalType: "int128",
            name: "bias",
            type: "int128",
          },
          {
            internalType: "int128",
            name: "slope",
            type: "int128",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNum",
            type: "uint256",
          },
        ],
        internalType: "struct Point",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lock",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lock",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lockPointHistory",
    outputs: [
      {
        internalType: "int128",
        name: "bias",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "slope",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNum",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pointHistory",
    outputs: [
      {
        internalType: "int128",
        name: "bias",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "slope",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNum",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "slopeChanges",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNum",
        type: "uint256",
      },
    ],
    name: "totalSupplyAtBlockNum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002424380380620024248339810160408190526200003491620001d6565b8151829082906200004d9060039060208501906200008f565b508051620000639060049060208401906200008f565b505060058054601260ff1990911617610100600160a81b0319166101003302179055506200023d915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620000c7576000855562000112565b82601f10620000e257805160ff191683800117855562000112565b8280016001018555821562000112579182015b8281111562000112578251825591602001919060010190620000f5565b506200012092915062000124565b5090565b5b8082111562000120576000815560010162000125565b600082601f8301126200014c578081fd5b81516001600160401b03808211156200016157fe5b6040516020601f8401601f19168201810183811183821017156200018157fe5b604052838252858401810187101562000198578485fd5b8492505b83831015620001bb57858301810151828401820152918201916200019c565b83831115620001cc57848185840101525b5095945050505050565b60008060408385031215620001e9578182fd5b82516001600160401b038082111562000200578384fd5b6200020e868387016200013b565b9350602085015191508082111562000224578283fd5b5062000233858286016200013b565b9150509250929050565b6121d7806200024d6000396000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c80638ad4c447116100ee578063a457c2d711610097578063dd62ed3e11610071578063dd62ed3e14610351578063f154a4ee14610364578063f52a36f714610377578063f83d08ba14610397576101a3565b8063a457c2d714610323578063a9059cbb14610336578063c2c4c5c114610349576101a3565b8063945fdf43116100c8578063945fdf43146102f557806395d89b4114610308578063981b24d014610310576101a3565b80638ad4c447146102c7578063900cf0cf146102da57806393d027e6146102e2576101a3565b8063367b7b2311610150578063642cf6491161012a578063642cf6491461028e5780636f987fcc146102a157806370a08231146102b4576101a3565b8063367b7b2314610238578063395093511461025b57806363accb761461026e576101a3565b806319ab453c1161018157806319ab453c146101fb57806323b872dd14610210578063313ce56714610223576101a3565b806306fdde03146101a8578063095ea7b3146101c657806318160ddd146101e6575b600080fd5b6101b06103ac565b6040516101bd9190611e52565b60405180910390f35b6101d96101d4366004611cea565b610442565b6040516101bd9190611e16565b6101ee610460565b6040516101bd919061203a565b61020e610209366004611c63565b610470565b005b6101d961021e366004611caf565b610536565b61022b6105be565b6040516101bd9190612043565b61024b610246366004611dc8565b6105c7565b6040516101bd9493929190611e2f565b6101d9610269366004611cea565b610617565b61028161027c366004611d5b565b610665565b6040516101bd9190612004565b6101ee61029c366004611dc8565b61071d565b6102816102af366004611dc8565b61082a565b6101ee6102c2366004611c63565b6108a8565b61024b6102d5366004611d5b565b610a11565b6101ee610a41565b61020e6102f0366004611d8b565b610a47565b6101ee610303366004611dc8565b610aeb565b6101b0610d8c565b6101ee61031e366004611d5b565b610ded565b6101d9610331366004611cea565b610e4a565b6101d9610344366004611cea565b610eb2565b61020e610ec6565b6101ee61035f366004611c7d565b610ed1565b6101ee610372366004611d5b565b610efc565b61038a610385366004611d5b565b61105f565b6040516101bd9190611e21565b61039f611074565b6040516101bd9190611de9565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104385780601f1061040d57610100808354040283529160200191610438565b820191906000526020600020905b81548152906001019060200180831161041b57829003601f168201915b5050505050905090565b600061045661044f611083565b8484611087565b5060015b92915050565b600061046b42610ded565b905090565b60055461010090046001600160a01b031633146104d4576040805162461bcd60e51b815260206004820181905260248201527f4f6e6c7920616c6c6f77656420746f2074686520696e6974696c61697a65722e604482015290519081900360640190fd5b600680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055600580547fffffffffffffffffffffff0000000000000000000000000000000000000000ff169055565b6000610543848484611173565b6105b38461054f611083565b6105ae856040518060600160405280602881526020016120e4602891396001600160a01b038a1660009081526001602052604081209061058d611083565b6001600160a01b0316815260208101919091526040016000205491906112ce565b611087565b5060015b9392505050565b60055460ff1690565b600a60205281600052604060002081815481106105e357600080fd5b6000918252602090912060039091020180546001820154600290920154600f82810b9550600160801b90920490910b925084565b6000610456610624611083565b846105ae8560016000610635611083565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611365565b61066d611c07565b6000828152600a6020526040902054806106a25760405162461bcd60e51b815260040161069990611edc565b60405180910390fd5b6000838152600a60205260408120805460001984019081106106c057fe5b60009182526020918290206040805160808101825260039093029091018054600f81810b810b810b8552600160801b909104810b810b900b938301939093526001830154908201526002909101546060820152925050505b919050565b6000828152600a6020908152604080832080548251818502810185019093528083528493849084015b828210156107ac57600084815260209081902060408051608081018252600386029092018054600f81810b810b810b8552600160801b909104810b810b900b83850152600180820154928401929092526002015460608301529083529092019101610746565b5050505090508051600014156107c657600091505061045a565b6000816001835103815181106107d857fe5b6020026020010151905060006107fb6107f6836040015187036113bf565b611423565b8260200151028260000151039050600081600f0b1361081b576000610820565b80600f0b5b935050505061045a565b610832611c07565b6000838152600a6020526040812080548490811061084c57fe5b60009182526020918290206040805160808101825260039093029091018054600f81810b810b810b8552600160801b909104810b810b900b93830193909352600183015490820152600290910154606082015291505092915050565b6006546040517f70a0823100000000000000000000000000000000000000000000000000000000815260009182916001600160a01b03909116906370a08231906108f6908690600401611de9565b60206040518083038186803b15801561090e57600080fd5b505afa158015610922573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109469190611d73565b90506000805b82811015610a09576006546040517f2f745c590000000000000000000000000000000000000000000000000000000081526000916001600160a01b031690632f745c59906109a09089908690600401611dfd565b60206040518083038186803b1580156109b857600080fd5b505afa1580156109cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f09190611d73565b90506109fc814261071d565b909201915060010161094c565b509392505050565b600960205260009081526040902080546001820154600290920154600f82810b93600160801b909304900b919084565b60075481565b6006546001600160a01b03163314610a715760405162461bcd60e51b815260040161069990611f4a565b610a7961149f565b506000808080610aa5610a9136889003880188611d13565b610aa036889003880188611d13565b6116e8565b9350935093509350610ab7848461180e565b610ae287610aca36899003890189611d13565b610ad936899003890189611d13565b878787876118ec565b50505050505050565b600043821115610b0d5760405162461bcd60e51b815260040161069990611f13565b6000838152600a6020908152604080832080548251818502810185019093528083529192909190849084015b82821015610b9f57600084815260209081902060408051608081018252600386029092018054600f81810b810b810b8552600160801b909104810b810b900b83850152600180820154928401929092526002015460608301529083529092019101610b39565b505050509050805160001415610bb957600091505061045a565b80516000906000190181805b6080811015610c1757828410610bda57610c17565b600284840104915086858381518110610bef57fe5b60200260200101516060015111610c0857819350610c0f565b6001820392505b600101610bc5565b506000848481518110610c2657fe5b60200260200101519050600060075490506000610c4589600754611a6c565b600081815260096020908152604080832081516080810183528154600f81810b810b810b8352600160801b909104810b810b900b938101939093526001810154918301919091526002015460608201529192508084841015610d0e575050600180830160009081526009602090815260409182902082516080810184528154600f81810b810b810b8352600160801b909104810b810b900b9281019290925292830154818301819052600290930154606091820181905290840151918401519190039103610d21565b8260600151430391508260400151420390505b60408301518215610d40578284606001518e03830281610d3d57fe5b04015b6000610d546107f6896040015184036113bf565b8860200151028860000151039050600081600f0b13610d74576000610d79565b80600f0b5b9f9e505050505050505050505050505050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104385780601f1061040d57610100808354040283529160200191610438565b600754600090815260096020908152604080832081516080810183528154600f81810b810b810b8352600160801b909104810b810b900b9381019390935260018101549183019190915260020154606082015261045a9083611ace565b6000610456610e57611083565b846105ae8560405180606001604052806025815260200161217d6025913960016000610e81611083565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906112ce565b6000610456610ebf611083565b8484611173565b610ece61149f565b50565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600043821115610f1e5760405162461bcd60e51b815260040161069990611ea5565b6007546000610f2d8483611a6c565b600081815260096020908152604080832081516080810183528154600f81810b810b810b8352600160801b909104810b810b900b938101939093526001810154918301919091526002015460608201529192508383101561101957600180840160009081526009602090815260409182902082516080810184528154600f81810b810b810b8352600160801b909104810b810b900b928101929092529283015491810191909152600290910154606080830182905284015114611013578260600151816060015103836040015182604001510384606001518903028161100f57fe5b0491505b50611045565b4382606001511461104557816060015143038260400151420383606001518803028161104157fe5b0490505b6110558282846040015101611ace565b9695505050505050565b600860205260009081526040902054600f0b81565b6006546001600160a01b031681565b3390565b6001600160a01b0383166110cc5760405162461bcd60e51b81526004018080602001828103825260248152602001806121316024913960400191505060405180910390fd5b6001600160a01b0382166111115760405162461bcd60e51b81526004018080602001828103825260228152602001806120756022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166111b85760405162461bcd60e51b815260040180806020018281038252602581526020018061210c6025913960400191505060405180910390fd5b6001600160a01b0382166111fd5760405162461bcd60e51b81526004018080602001828103825260238152602001806120526023913960400191505060405180910390fd5b611208838383611b88565b61124581604051806060016040528060268152602001612097602691396001600160a01b03861660009081526020819052604090205491906112ce565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546112749082611365565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561135d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561132257818101518382015260200161130a565b50505050905090810190601f16801561134f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156105b7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60007f8000000000000000000000000000000000000000000000000000000000000000821061141f5760405162461bcd60e51b81526004018080602001828103825260288152602001806121556028913960400191505060405180910390fd5b5090565b60007fffffffffffffffffffffffffffffffff80000000000000000000000000000000821215801561146457506f8000000000000000000000000000000082125b61141f5760405162461bcd60e51b81526004018080602001828103825260278152602001806120bd6027913960400191505060405180910390fd5b6114a7611c07565b6007546114b2611c07565b8115611511575060008181526009602090815260409182902082516080810184528154600f81810b810b810b8352600160801b909104810b810b900b928101929092526001810154928201929092526002909101546060820152611535565b50604080516080810182526000808252602082015242918101919091524360608201525b60408101518190600090421161154c57600061156d565b8260400151420383606001514303670de0b6b3a7640000028161156b57fe5b045b9050600062093a8083604001518161158157fe5b0462093a8002905060005b60ff8110156116d95762093a80820191506000428311156115af574292506115c3565b50600082815260086020526040902054600f0b5b604085015160208701805188519286038102909203600f90810b810b808a52928401810b810b909152600091900b12156115fc57600086525b60008660200151600f0b121561161457600060208701525b604080860184815290870184905251670de0b6b3a76400009084038502048560600151018660600181815250506001870196504283141561165b57504360608601526116d9565b60008781526009602090815260409182902088518154928a0151600f90810b6fffffffffffffffffffffffffffffffff908116600160801b029290910b81166fffffffffffffffffffffffffffffffff199094169390931790921691909117815590870151600182015560608701516002909101555060010161158c565b50505060079290925591505090565b6116f0611c07565b6116f8611c07565b60008042866020015111801561170e5750855115155b15611763576117306107f6630784ce0088600001518161172a57fe5b046113bf565b8460200190600f0b9081600f0b815250506117536107f6428860200151036113bf565b602085015102600f90810b900b84525b4285602001511180156117765750845115155b156117af576117926107f6630784ce0087600001518161172a57fe5b600f90810b810b602080860182905287015142900302810b900b83525b602080870151600090815260088252604090205490860151600f9190910b925015611805578560200151856020015114156117eb575080611805565b50602080850151600090815260089091526040902054600f0b5b92959194509250565b600754600090815260096020908152604080832081516080810183528154600f81810b810b810b8352600160801b909104810b810b900b9381019390935260018101549183019190915260020154606082015261186e9084908490611ba0565b6007546000908152600960209081526040918290208351815492850151600f90810b6fffffffffffffffffffffffffffffffff908116600160801b029290910b81166fffffffffffffffffffffffffffffffff1990941693909317909216919091178155908201516001820155606090910151600290910155505050565b428660200151111561195f5783602001518201915085602001518560200151141561191b578260200151820391505b602086810151600090815260089091526040902080546fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff600f85900b161790555b42856020015111156119ce578560200151856020015111156119ce5760208084015186820151600090815260089092526040909120805491909203600f81900b6fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff19909216919091179091555b505042604080830191825243606084019081526000978852600a6020908152918820805460018181018355918a529883902085516003909a020180549390950151600f90810b6fffffffffffffffffffffffffffffffff908116600160801b029a90910b81166fffffffffffffffffffffffffffffffff19909416939093179092169790971783559051908201559351600290940193909355505050565b6000808281805b6080811015611ac357828410611a8857611ac3565b6002600185850101046000818152600960205260409020600201549092508710611ab457819350611abb565b6001820392505b600101611a73565b509195945050505050565b60008062093a80846040015181611ae157fe5b6040860151602087015187519390920462093a800293509160005b60ff811015611b655762093a8085019450600087861115611b1f57879550611b33565b50600085815260086020526040902054600f0b5b611b416107f68688036113bf565b84028303925087861415611b555750611b65565b8594509290920191600101611afc565b50600081600f0b13611b78576000611b7d565b80600f0b5b979650505050505050565b60405162461bcd60e51b815260040161069990611fa7565b611ba8611c07565b506020808401518382015191830180519190920301600f90810b810b9182905284518451845191900301810b810b835282916000910b1215611bec57600060208201525b60008160000151600f0b12156105b757600081529392505050565b60405180608001604052806000600f0b81526020016000600f0b815260200160008152602001600081525090565b80356001600160a01b038116811461071857600080fd5b600060408284031215611c5d578081fd5b50919050565b600060208284031215611c74578081fd5b6105b782611c35565b60008060408385031215611c8f578081fd5b611c9883611c35565b9150611ca660208401611c35565b90509250929050565b600080600060608486031215611cc3578081fd5b611ccc84611c35565b9250611cda60208501611c35565b9150604084013590509250925092565b60008060408385031215611cfc578182fd5b611d0583611c35565b946020939093013593505050565b600060408284031215611d24578081fd5b6040516040810181811067ffffffffffffffff82111715611d4157fe5b604052823581526020928301359281019290925250919050565b600060208284031215611d6c578081fd5b5035919050565b600060208284031215611d84578081fd5b5051919050565b600080600060a08486031215611d9f578283fd5b83359250611db08560208601611c4c565b9150611dbf8560608601611c4c565b90509250925092565b60008060408385031215611dda578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b600f9190910b815260200190565b600f94850b81529290930b60208301526040820152606081019190915260800190565b6000602080835283518082850152825b81811015611e7e57858101830151858201604001528201611e62565b81811115611e8f5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526018908201527f6f6e6c792073656172636820696e2074686520706173742e0000000000000000604082015260600190565b6020808252600e908201527f6e6f206c6f636b20657869737473000000000000000000000000000000000000604082015260600190565b60208082526010908201527f4f6e6c79207061737420626c6f636b7300000000000000000000000000000000604082015260600190565b60208082526024908201527f4f6e6c79207665206c6f636b20636f6e74726163742063616e2063616c6c207460408201527f6869732e00000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602f908201527f4e6f6e2d7472616e736665727261626c652e20596f752063616e206f6e6c792060408201527f7472616e73666572206c6f636b732e0000000000000000000000000000000000606082015260800190565b60006080820190508251600f0b82526020830151600f0b6020830152604083015160408301526060830151606083015292915050565b90815260200190565b60ff9190911681526020019056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636553616665436173743a2076616c756520646f65736e27742066697420696e20313238206269747345524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737353616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e7432353645524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212206201ee7dd53aba54c5612cbd6ca253bdd49256aeca5097e72694d7358e63efc964736f6c63430007060033";
