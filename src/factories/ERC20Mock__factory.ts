/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ERC20Mock } from "../ERC20Mock";

export class ERC20Mock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Mock> {
    return super.deploy(overrides || {}) as Promise<ERC20Mock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20Mock {
    return super.attach(address) as ERC20Mock;
  }
  connect(signer: Signer): ERC20Mock__factory {
    return super.connect(signer) as ERC20Mock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC20Mock;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604080518082018252600981526845524332304d6f636b60b81b6020808301918252835180850190945260048452634d4f434b60e01b90840152815191929161005c91600391610098565b508051610070906004906020840190610098565b505060058054601260ff1990911617610100600160a81b031916610100330217905550610139565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826100ce5760008555610114565b82601f106100e757805160ff1916838001178555610114565b82800160010185558215610114579182015b828111156101145782518255916020019190600101906100f9565b50610120929150610124565b5090565b5b808211156101205760008155600101610125565b610f2a80620001496000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806342966c6811610097578063a457c2d711610066578063a457c2d714610325578063a9059cbb14610351578063dd62ed3e1461037d578063fca3b5aa146103ab57610100565b806342966c68146102ae57806370a08231146102cb57806379cc6790146102f157806395d89b411461031d57610100565b806323b872dd116100d357806323b872dd14610200578063313ce56714610236578063395093511461025457806340c10f191461028057610100565b806306fdde03146101055780630754617214610182578063095ea7b3146101a657806318160ddd146101e6575b600080fd5b61010d6103d1565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61018a610467565b604080516001600160a01b039092168252519081900360200190f35b6101d2600480360360408110156101bc57600080fd5b506001600160a01b03813516906020013561047b565b604080519115158252519081900360200190f35b6101ee610498565b60408051918252519081900360200190f35b6101d26004803603606081101561021657600080fd5b506001600160a01b0381358116916020810135909116906040013561049e565b61023e610525565b6040805160ff9092168252519081900360200190f35b6101d26004803603604081101561026a57600080fd5b506001600160a01b03813516906020013561052e565b6102ac6004803603604081101561029657600080fd5b506001600160a01b03813516906020013561057c565b005b6102ac600480360360208110156102c457600080fd5b50356105dd565b6101ee600480360360208110156102e157600080fd5b50356001600160a01b03166105f1565b6102ac6004803603604081101561030757600080fd5b506001600160a01b03813516906020013561060c565b61010d610666565b6101d26004803603604081101561033b57600080fd5b506001600160a01b0381351690602001356106c7565b6101d26004803603604081101561036757600080fd5b506001600160a01b03813516906020013561072f565b6101ee6004803603604081101561039357600080fd5b506001600160a01b0381358116916020013516610743565b6102ac600480360360208110156103c157600080fd5b50356001600160a01b031661076e565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561045d5780601f106104325761010080835404028352916020019161045d565b820191906000526020600020905b81548152906001019060200180831161044057829003601f168201915b5050505050905090565b60055461010090046001600160a01b031681565b600061048f610488610800565b8484610804565b50600192915050565b60025490565b60006104ab8484846108f0565b61051b846104b7610800565b61051685604051806060016040528060288152602001610e1a602891396001600160a01b038a166000908152600160205260408120906104f5610800565b6001600160a01b031681526020810191909152604001600020549190610a4b565b610804565b5060019392505050565b60055460ff1690565b600061048f61053b610800565b84610516856001600061054c610800565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610ae2565b60055461010090046001600160a01b031633146105cf576040805162461bcd60e51b815260206004820152600c60248201526b2737ba10309036b4b73a32b960a11b604482015290519081900360640190fd5b6105d98282610b43565b5050565b6105ee6105e8610800565b82610c33565b50565b6001600160a01b031660009081526020819052604090205490565b600061064382604051806060016040528060248152602001610e426024913961063c86610637610800565b610743565b9190610a4b565b905061065783610651610800565b83610804565b6106618383610c33565b505050565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561045d5780601f106104325761010080835404028352916020019161045d565b600061048f6106d4610800565b8461051685604051806060016040528060258152602001610ed060259139600160006106fe610800565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610a4b565b600061048f61073c610800565b84846108f0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60055461010090046001600160a01b031633146107c1576040805162461bcd60e51b815260206004820152600c60248201526b2737ba10309036b4b73a32b960a11b604482015290519081900360640190fd5b600580546001600160a01b03909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b3390565b6001600160a01b0383166108495760405162461bcd60e51b8152600401808060200182810382526024815260200180610eac6024913960400191505060405180910390fd5b6001600160a01b03821661088e5760405162461bcd60e51b8152600401808060200182810382526022815260200180610dd26022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109355760405162461bcd60e51b8152600401808060200182810382526025815260200180610e876025913960400191505060405180910390fd5b6001600160a01b03821661097a5760405162461bcd60e51b8152600401808060200182810382526023815260200180610d8d6023913960400191505060405180910390fd5b610985838383610661565b6109c281604051806060016040528060268152602001610df4602691396001600160a01b0386166000908152602081905260409020549190610a4b565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546109f19082610ae2565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610ada5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a9f578181015183820152602001610a87565b50505050905090810190601f168015610acc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610b3c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610b9e576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610baa60008383610661565b600254610bb79082610ae2565b6002556001600160a01b038216600090815260208190526040902054610bdd9082610ae2565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610c785760405162461bcd60e51b8152600401808060200182810382526021815260200180610e666021913960400191505060405180910390fd5b610c8482600083610661565b610cc181604051806060016040528060228152602001610db0602291396001600160a01b0385166000908152602081905260409020549190610a4b565b6001600160a01b038316600090815260208190526040902055600254610ce79082610d2f565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600082821115610d86576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212201d67b6067d35f2d7a6f2e7debdc1f26f5d943a437b95e07cede9e319b3eae44764736f6c63430007060033";
