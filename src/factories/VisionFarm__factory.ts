/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { VisionFarm } from "../VisionFarm";

export class VisionFarm__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _gov: string,
    _visionToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VisionFarm> {
    return super.deploy(
      _gov,
      _visionToken,
      overrides || {}
    ) as Promise<VisionFarm>;
  }
  getDeployTransaction(
    _gov: string,
    _visionToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gov, _visionToken, overrides || {});
  }
  attach(address: string): VisionFarm {
    return super.attach(address) as VisionFarm;
  }
  connect(signer: Signer): VisionFarm__factory {
    return super.connect(signer) as VisionFarm__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VisionFarm {
    return new Contract(address, _abi, signerOrProvider) as VisionFarm;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
      {
        internalType: "address",
        name: "_visionToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Anarchized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_prevGovernance",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newGovernance",
        type: "address",
      },
    ],
    name: "NewGovernance",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "planter",
        type: "address",
      },
    ],
    name: "addPlanter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "anarchize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "anarchizedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "farmer",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "batchDispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "dispatchFarmers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "dispatchableFarmers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "dispatchedFarmers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "farms",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFarmers",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "forceAnarchize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "forceAnarchizeAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "genesis",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getAllHarvestableCropsFor",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "farmer",
        type: "address",
      },
    ],
    name: "getAllHarvestedCropsOf",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "getHarvestableCrops",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getHarvestableCropsFor",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "farmer",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getHarvestedCropsOf",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNextEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "harvestAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cryptoJobBoard",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketplace",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "isHarvestable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epochs",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumLock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumLock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "plantSeeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "planted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "plantedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "remainingLocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "planter",
        type: "address",
      },
    ],
    name: "removePlanter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "setAnarchyPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "address",
        name: "withdrawTo",
        type: "address",
      },
    ],
    name: "setWithdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "epochs",
        type: "uint256",
      },
    ],
    name: "stakeAndLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakings",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "locked",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "withdrawTo",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "visionToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610120604052600060018181556002919091556224ea0060c05260e0526032610100523480156200002f57600080fd5b50604051620029ed380380620029ed833981810160405260408110156200005557600080fd5b50805160209182015160008054336001600160a01b03199182168117909255600380549091169091179055606081901b6001600160601b0319166080524260a0529091620000ae908390620000b6811b6200183e17901c565b5050620001cc565b6000546001600160a01b0316331462000107576040805162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015290519081900360640190fd5b6001600160a01b03811662000163576040805162461bcd60e51b815260206004820152601860248201527f55736520616e61726368697a65282920696e73746561642e0000000000000000604482015290519081900360640190fd5b6200016e8162000171565b50565b600080546040516001600160a01b03808516939216917f48da34dfe9ebb4198c3f70d8382467788dcee33984c79a74fa850772c4e5e36f91a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60805160601c60a05160c05160e051610100516127c06200022d60003980611b395280611cc15250806114725280611c625250806119e35280611fef52508061181c5280611a04525080610d3d52806117d95280611fcb52506127c06000f3fe608060405234801561001057600080fd5b50600436106102e95760003560e01c8063948b6dd411610191578063d751dc78116100e3578063e6836d6a11610097578063f09a401611610071578063f09a401614610aad578063f2fd83e014610adb578063fd2dcecf14610ae3576102e9565b8063e6836d6a14610a71578063e7a0c94514610a9d578063efe97d0514610aa5576102e9565b8063dc6e13e1116100c8578063dc6e13e1146109ea578063dd46706414610a37578063de19d07914610a54576102e9565b8063d751dc781461092f578063db7fb38214610937576102e9565b8063a7f0b3de11610145578063b97dd9e21161011f578063b97dd9e214610867578063bd5dec981461086f578063d6595f3a14610912576102e9565b8063a7f0b3de14610731578063ab033ea914610739578063afa173de1461075f576102e9565b80639c0981f3116101765780639c0981f3146106ef5780639c724e241461070c578063a694fc3a14610714576102e9565b8063948b6dd4146106925780639be16ddb146106b5576102e9565b8063690141371161024a5780637da470ea116101fe578063873f8cb8116101d8578063873f8cb8146106125780638e3d1b66146106405780639056f9181461066c576102e9565b80637da470ea146105c15780637ec31c2a146105de578063853828b61461060a576102e9565b806370a082311161022f57806370a082311461057657806371177b3c1461059c5780637cae8e1a146105a4576102e9565b806369014137146104a35780636ee228f114610559576102e9565b8063438dd5b5116102a15780634ac6c090116102865780634ac6c0901461045b578063605cfbb51461049357806366bfc1581461049b576102e9565b8063438dd5b51461040957806348bb8bab1461042f576102e9565b80631c23e89f116102d25780631c23e89f1461031c5780632e17de78146103425780633b17d5a11461035f576102e9565b806312d43a51146102ee5780631b343adc14610312575b600080fd5b6102f6610aeb565b604080516001600160a01b039092168252519081900360200190f35b61031a610afa565b005b61031a6004803603602081101561033257600080fd5b50356001600160a01b0316610b54565b61031a6004803603602081101561035857600080fd5b5035610c32565b61031a6004803603604081101561037557600080fd5b8135919081019060408101602082013564010000000081111561039757600080fd5b8201836020820111156103a957600080fd5b803590602001918460208302840111640100000000831117156103cb57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610d69945050505050565b61031a6004803603602081101561041f57600080fd5b50356001600160a01b0316610ed3565b61031a6004803603604081101561044557600080fd5b506001600160a01b038135169060200135610f2f565b6104816004803603602081101561047157600080fd5b50356001600160a01b0316611204565b60408051918252519081900360200190f35b61031a611254565b6104816112ff565b6104c0600480360360208110156104b957600080fd5b5035611305565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156105045781810151838201526020016104ec565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561054357818101518382015260200161052b565b5050505090500194505050505060405180910390f35b6102f66004803603602081101561056f57600080fd5b503561142d565b6104816004803603602081101561058c57600080fd5b50356001600160a01b0316611457565b610481611470565b61031a600480360360208110156105ba57600080fd5b5035611494565b610481600480360360208110156105d757600080fd5b5035611570565b610481600480360360408110156105f457600080fd5b506001600160a01b038135169060200135611582565b61031a6115ad565b61031a6004803603604081101561062857600080fd5b506001600160a01b0381358116916020013516611610565b6104816004803603604081101561065657600080fd5b506001600160a01b0381351690602001356116be565b6104c06004803603602081101561068257600080fd5b50356001600160a01b031661170e565b61031a600480360360408110156106a857600080fd5b508035906020013561177f565b6106db600480360360208110156106cb57600080fd5b50356001600160a01b0316611795565b604080519115158252519081900360200190f35b6106db6004803603602081101561070557600080fd5b50356117aa565b6104816117bd565b61031a6004803603602081101561072a57600080fd5b50356117c3565b61048161181a565b61031a6004803603602081101561074f57600080fd5b50356001600160a01b031661183e565b6108176004803603606081101561077557600080fd5b8135916001600160a01b03602082013516918101906060810160408201356401000000008111156107a557600080fd5b8201836020820111156107b757600080fd5b803590602001918460208302840111640100000000831117156107d957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506118f2945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561085357818101518382015260200161083b565b505050509050019250505060405180910390f35b6104816119df565b61031a6004803603602081101561088557600080fd5b8101906020810181356401000000008111156108a057600080fd5b8201836020820111156108b257600080fd5b803590602001918460208302840111640100000000831117156108d457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611a32945050505050565b61031a6004803603602081101561092857600080fd5b5035611abf565b610481611b37565b6108176004803603604081101561094d57600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561097857600080fd5b82018360208201111561098a57600080fd5b803590602001918460208302840111640100000000831117156109ac57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611b5b945050505050565b610a1060048036036020811015610a0057600080fd5b50356001600160a01b0316611c36565b6040805193845260208401929092526001600160a01b031682820152519081900360600190f35b61031a60048036036020811015610a4d57600080fd5b5035611c60565b61031a60048036036020811015610a6a57600080fd5b5035611d87565b6104c060048036036040811015610a8757600080fd5b50803590602001356001600160a01b0316611e70565b61031a611ef8565b610481611f32565b61031a60048036036040811015610ac357600080fd5b506001600160a01b0381358116916020013516611f44565b6102f6611fc9565b610481611fed565b6000546001600160a01b031681565b6000546001600160a01b03163314610b4a576040805162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015290519081900360640190fd5b610b52612011565b565b6000546001600160a01b03163314610ba4576040805162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015290519081900360640190fd5b6001600160a01b03811660009081526004602052604090205460ff16610c11576040805162461bcd60e51b815260206004820152601860248201527f4e6f742061207265676973746572656420706c616e7465720000000000000000604482015290519081900360640190fd5b6001600160a01b03166000908152600460205260409020805460ff19169055565b336000908152600960205260409020610c496119df565b816001015410610ca0576040805162461bcd60e51b815260206004820152601160248201527f5374616b696e67206973206c6f636b6564000000000000000000000000000000604482015290519081900360640190fd5b8054821115610cf6576040805162461bcd60e51b815260206004820152601260248201527f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000604482015290519081900360640190fd5b8054610d02908361204a565b815560028101546000906001600160a01b0316610d1f5733610d2e565b60028201546001600160a01b03165b9050610d646001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682856120a7565b505050565b610d72826117aa565b610dc3576040805162461bcd60e51b815260206004820152600a60248201527f556e726970652079657400000000000000000000000000000000000000000000604482015290519081900360640190fd5b600082815260086020526040812090610ddd8433856118f2565b905060005b8351811015610e9b576000848281518110610df957fe5b602002602001015190506000838381518110610e1157fe5b60200260200101519050610e5581866002016000856001600160a01b03166001600160a01b031681526020019081526020016000205461204a90919063ffffffff16565b6001600160a01b03909216600081815260028701602090815260408083209590955533825260058152848220928252919091529190912080549091019055600101610de2565b503360009081526003830160205260409020548254610eb99161204a565b825550336000908152600390910160205260408120555050565b6000546001600160a01b03163314610f23576040805162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015290519081900360640190fd5b610f2c81612127565b50565b3360009081526004602052604090205460ff16610f93576040805162461bcd60e51b815260206004820152601860248201527f4e6f742061207265676973746572656420706c616e7465720000000000000000604482015290519081900360640190fd5b80610fe5576040805162461bcd60e51b815260206004820152600960248201527f4e6f20616d6f756e740000000000000000000000000000000000000000000000604482015290519081900360640190fd5b80826001600160a01b03166370a08231336040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561103357600080fd5b505afa158015611047573d6000803e3d6000fd5b505050506040513d602081101561105d57600080fd5b505110156110b2576040805162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f75676820746f6b656e2062616c616e63652e00000000000000604482015290519081900360640190fd5b6001600160a01b03821660009081526006602052604090205460ff16611138576001600160a01b0382166000818152600660205260408120805460ff191660019081179091556007805491820181559091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b03191690911790555b600060086000611146611f32565b8152602080820192909252604090810160009081206001600160a01b03871682526002810190935220549091506111a7576001818101805491820181556000908152602090200180546001600160a01b0319166001600160a01b0385161790555b6111bc6001600160a01b0384163330856121b9565b6001600160a01b03831660009081526002820160205260409020546111e19083612247565b6001600160a01b0390931660009081526002909101602052604090209190915550565b60008061120f6119df565b6001600160a01b038416600090815260096020526040812060018101549293509183111561123f5750600061124c565b8282600101546001010390505b949350505050565b6002546112a8576040805162461bcd60e51b815260206004820152601660248201527f43616e6e6f742064697362616e642074686520676f7600000000000000000000604482015290519081900360640190fd5b600254421015610b4a576040805162461bcd60e51b815260206004820152601660248201527f43616e6e6f742064697362616e642074686520676f7600000000000000000000604482015290519081900360640190fd5b60015481565b60008181526008602090815260409182902060018101805484518185028101850190955280855260609485949092919083018282801561136e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611350575b50505050509250825167ffffffffffffffff8111801561138d57600080fd5b506040519080825280602002602001820160405280156113b7578160200160208202803683370190505b50915060005b83518110156114265760008482815181106113d457fe5b60200260200101519050826002016000826001600160a01b03166001600160a01b031681526020019081526020016000205484838151811061141257fe5b6020908102919091010152506001016113bd565b5050915091565b6007818154811061143d57600080fd5b6000918252602090912001546001600160a01b0316905081565b600061146a826114656119df565b6116be565b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61149c6119df565b81116114d95760405162461bcd60e51b81526004018080602001828103825260238152602001806126bb6023913960400191505060405180910390fd5b60006114e533836116be565b905060006114f33384611582565b9050808210156115345760405162461bcd60e51b815260040180806020018281038252602a8152602001806126de602a913960400191505060405180910390fd5b6000838152600860205260409020805482840391906115539083612247565b815533600090815260039091016020526040902092909255505050565b60086020526000908152604090205481565b60009081526008602090815260408083206001600160a01b0394909416835260039093019052205490565b610b52600780548060200260200160405190810160405280929190818152602001828054801561160657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115e8575b5050505050611a32565b33600090815260096020526040812060028101549091906001600160a01b031661163a5783611649565b60028201546001600160a01b03165b90506001600160a01b0381163314611699576040805162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015290519081900360640190fd5b5060020180546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b0382166000908152600960205260408120600181015482908411156116ec575060006116f9565b8382600101546001010390505b815461170590826122a8565b95945050505050565b606080600780548060200260200160405190810160405280929190818152602001828054801561176757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611749575b505050505091506117788383611b5b565b9050915091565b611788826117c3565b61179181611c60565b5050565b60066020526000908152604090205460ff1681565b60006117b46119df565b90911115919050565b60025481565b33600081815260096020526040902090611809907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169030856121b9565b80546118159083612247565b905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b0316331461188e576040805162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015290519081900360640190fd5b6001600160a01b0381166118e9576040805162461bcd60e51b815260206004820152601860248201527f55736520616e61726368697a65282920696e73746561642e0000000000000000604482015290519081900360640190fd5b610f2c81612301565b600083815260086020526040902081516060919067ffffffffffffffff8111801561191c57600080fd5b50604051908082528060200260200182016040528015611946578160200160208202803683370190505b50915060005b83518110156119d657600084828151811061196357fe5b60209081029190910181015184546001600160a01b03808a16600090815260038801855260408082205492851682526002890190955293909320549193506119b69290916119b0916122a8565b9061235c565b8483815181106119c257fe5b60209081029190910101525060010161194c565b50509392505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000420381611a2c57fe5b04905090565b60005b8151811015611791576000828281518110611a4c57fe5b6020908102919091018101513360009081526005835260408082206001600160a01b038416835290935291909120549091508015611ab5573360008181526005602090815260408083206001600160a01b0387168085529252822091909155611ab591836120a7565b5050600101611a35565b610f2c8160086000848152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015611b2d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611b0f575b5050505050610d69565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060815167ffffffffffffffff81118015611b7557600080fd5b50604051908082528060200260200182016040528015611b9f578160200160208202803683370190505b50905060005b8251811015611c2f576000838281518110611bbc57fe5b6020026020010151905060056000866001600160a01b03166001600160a01b031681526020019081526020016000206000826001600160a01b03166001600160a01b0316815260200190815260200160002054838381518110611c1b57fe5b602090810291909101015250600101611ba5565b5092915050565b6009602052600090815260409020805460018201546002909201549091906001600160a01b031683565b7f0000000000000000000000000000000000000000000000000000000000000000811015611cbf5760405162461bcd60e51b81526004018080602001828103825260378152602001806127086037913960400191505060405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000811115611d1e5760405162461bcd60e51b81526004018080602001828103825260348152602001806126666034913960400191505060405180910390fd5b600081611d296119df565b33600090815260096020526040902060018101549190920192508211611d805760405162461bcd60e51b81526004018080602001828103825260228152602001806126446022913960400191505060405180910390fd5b6001015550565b6000546001600160a01b03163314611dd7576040805162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015290519081900360640190fd5b60025415611e2c576040805162461bcd60e51b815260206004820152600e60248201527f43616e6e6f74207570646174652e000000000000000000000000000000000000604482015290519081900360640190fd5b42811015611e6b5760405162461bcd60e51b81526004018080602001828103825260228152602001806127696022913960400191505060405180910390fd5b600255565b60608060086000858152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015611edd57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611ebf575b50505050509150611eef8484846118f2565b90509250929050565b6000611f0333611204565b90506000611f0f6119df565b905060005b82811015610d6457611f2a818360010101611494565b600101611f14565b6000611f3c6119df565b600101905090565b6003546001600160a01b03163314611fa3576040805162461bcd60e51b815260206004820181905260248201527f4f6e6c7920616c6c6f77656420746f2074686520696e6974696c61697a65722e604482015290519081900360640190fd5b611fac82612127565b611fb581612127565b5050600380546001600160a01b0319169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61201b6000612301565b426001556040517fbf30e910dd2b6e24c75c800d9f3477674e89a4b45e366f87cd03c99e0ba6496190600090a1565b6000828211156120a1576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610d649084906123c3565b6001600160a01b03811660009081526004602052604090205460ff1615612195576040805162461bcd60e51b815260206004820152601260248201527f416c726561647920726567697374657265640000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526122419085906123c3565b50505050565b6000828201838110156122a1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6000826122b75750600061146a565b828202828482816122c457fe5b04146122a15760405162461bcd60e51b815260040180806020018281038252602181526020018061269a6021913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f48da34dfe9ebb4198c3f70d8382467788dcee33984c79a74fa850772c4e5e36f91a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008082116123b2576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816123bb57fe5b049392505050565b6000612418826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166124749092919063ffffffff16565b805190915015610d645780806020019051602081101561243757600080fd5b5051610d645760405162461bcd60e51b815260040180806020018281038252602a81526020018061273f602a913960400191505060405180910390fd5b606061124c84846000858561248885612599565b6124d9576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106125175780518252601f1990920191602091820191016124f8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612579576040519150601f19603f3d011682016040523d82523d6000602084013e61257e565b606091505b509150915061258e82828661259f565b979650505050505050565b3b151590565b606083156125ae5750816122a1565b8251156125be5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126085781810151838201526020016125f0565b50505050905090810190601f1680156126355780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4974206f6e6c7920616c6c6f777320657874656e64696e6720746865206c6f636b2e53686f756c64206265206c657373206f7220657175616c207468616e20746865206d6178696d756d206c6f636b20706572696f64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616e6e6f74206469737061746368206661726d65727320746f20746865207061737443616e6e6f7420776974686472617720616c72656164792064697370617463686564206661726d65727353686f756c642062652067726561746572206f7220657175616c207468616e20746865206d696e696d756d206c6f636b20706572696f645361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656454696d65706f696e742073686f756c6420626520696e20746865206675747572652ea2646970667358221220ad91b086239fe51c216c183e40e91af000e518b84f121307eb7846fe94b54d1364736f6c63430007060033";
